#!/usr/bin/env bash

# Console colors
red='\033[0;91m'
red_bg='\033[101m'
yellow_bg='\033[43;90m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[0;33m'
yellow_bold='\033[1;33m'
NC='\033[0m'


echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

fin coder enable

# SSL
# If an SSL certificate already exists (e.g. LetsEncrypt), use it
if [ -f $HOME/.docksal/certs/$VIRTUAL_HOST.crt ]; then
  if [ ! -f $HOME/.docksal/certs/ide-$VIRTUAL_HOST.crt ]; then
    cp -rf $HOME/.docksal/certs/$VIRTUAL_HOST.crt $HOME/.docksal/certs/ide-$VIRTUAL_HOST.crt
    cp -rf $HOME/.docksal/certs/$VIRTUAL_HOST.key $HOME/.docksal/certs/ide-$VIRTUAL_HOST.key
  fi
else # Else, create one with OpenSSL
  SERVICE=_coder
  C_NAME="$COMPOSE_PROJECT_NAME_SAFE$SERVICE"
  CODER_CONTAINER_ID=$(fin docker container ls | grep $C_NAME | awk '{ print $1 }')
  echo "COMPOSE_PROJECT_NAME_SAFE is $COMPOSE_PROJECT_NAME_SAFE"
  echo "C_NAME is $C_NAME"
  echo "container ID is $CODER_CONTAINER_ID"
  # Set Git username
  fin docker exec \
    -w /home/coder/code-server \
    -it $CODER_CONTAINER_ID \
    git config --global user.name "${COMPOSE_PROJECT_NAME_SAFE}"

  # Set Git email
  fin docker exec \
    -w /home/coder/code-server \
    -it $CODER_CONTAINER_ID \
    git config --global user.email "${COMPOSE_PROJECT_NAME_SAFE}"

  # Create self signed SSL cert
  fin docker exec \
    -w /home/coder/certs \
    -it $CODER_CONTAINER_ID \
    openssl req -x509 -newkey rsa:4096 \
      -keyout ide-$VIRTUAL_HOST.key \
      -out ide-$VIRTUAL_HOST.crt -days 10000 -nodes -subj "/CN=ide-$VIRTUAL_HOST"
fi
