#!/usr/bin/env bash

# Check Docksal running
if [[ "$DOCKER_RUNNING" != "true" ]]; then
	echo "[PRE-INSTALL] ERROR: Docksal and project should be running"
	exit 1
fi

# Check Docksal running
if [[ "$ADDON_GLOBAL" == "true" ]]; then
	echo -e "[PRE-INSTALL] ERROR: Coder addon should not be installed globally"
	exit 1
fi


# Check project running
if ! (fin ps | grep "_cli_" | grep "Up" >/dev/null); then
	echo "[PRE-INSTALL] ERROR: Start the project with fin start first"
	exit 1
fi

# Get fin config
fin_config=$(fin config)
if [[ $? != 0 ]]; then
	echo "[PRE-INSTALL] ERROR: 'fin config' command was not successful. Check your fin config"
	exit 1
fi

# Check there is no coder already
if (echo "$fin_config" | grep "image: acondura/code-server"); then
	echo "[PRE-INSTALL] ERROR: Coder seems to be already enabled for this project"
	exit 1
fi

# Check there is no coder already
if (echo "$fin_config" | grep "  acondura/code-server:"); then
	echo "[PRE-INSTALL] ERROR: Container named 'coder' already exists. Remove it to continue."
	exit 1
fi

FIXUID=$(id -u)
FIXGID=$(id -g)
# If the docksal-local.env file already exists,
# make sure the 'fixuid' variables are not set
if [ -f "$PROJECT_ROOT/.docksal/docksal-local.env" ]; then
  # Delete the FIXUID line
  sed -i '/.*FIXUID.*/d' "$PROJECT_ROOT/.docksal/docksal-local.env"
  # Delete the FIGUID line
  sed -i '/.*FIXGID.*/d' "$PROJECT_ROOT/.docksal/docksal-local.env"
fi
# Add the 'fixuid' variables
echo "FIXUID=$FIXUID" >> "$PROJECT_ROOT/.docksal/docksal-local.env"
echo "FIXGID=$FIXGID" >> "$PROJECT_ROOT/.docksal/docksal-local.env"

# SSL
# If an SSL certificate already exists (e.g. LetsEncrypt), use it
if [ -f $HOME/.docksal/certs/$VIRTUAL_HOST.crt ]; then
  if [ ! -f $HOME/.docksal/certs/ide-$VIRTUAL_HOST.crt ]; then
    cp -rf $HOME/.docksal/certs/$VIRTUAL_HOST.crt $HOME/.docksal/certs/ide-$VIRTUAL_HOST.crt
    cp -rf $HOME/.docksal/certs/$VIRTUAL_HOST.key $HOME/.docksal/certs/ide-$VIRTUAL_HOST.key
  fi
else # Else, create one with OpenSSL
  CODER_CONTAINER_ID=$(fin docker container ls | grep ${COMPOSE_PROJECT_NAME_SAFE}_coder | awk '{ print $1 }')
  fin docker exec -it $CODER_CONTAINER_ID cd /home/coder/code-server
  fin docker exec -it $CODER_CONTAINER_ID git config --global user.name "${COMPOSE_PROJECT_NAME_SAFE}"
  fin docker exec -it $CODER_CONTAINER_ID git config --global user.email "${COMPOSE_PROJECT_NAME_SAFE}"
  fin docker exec -it $CODER_CONTAINER_ID cd /home/coder/.docksal/certs
  fin docker exec -it $CODER_CONTAINER_ID openssl req -x509 -newkey rsa:4096 -keyout ide-$VIRTUAL_HOST.key -out ide-$VIRTUAL_HOST.crt -days 365 -nodes -subj "/CN=ide-$VIRTUAL_HOST"
fi

# All good
exit 0
