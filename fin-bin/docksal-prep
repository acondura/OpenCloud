#! /usr/bin/env bash

#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

#-------------------------- Execution --------------------------------

set -e

echo -e "${green_bg} - ${NC}${green} Updating packages...${NC}"

export DEBIAN_FRONTEND=noninteractive

# Update package info
apt-get update >/dev/null
apt-get -y install apt-utils >/dev/null

# Upgrade packages
# echo -e "${green_bg} - ${NC}${green} Upgrading and applying security updates...${NC}"
# apt-get -y upgrade >/dev/null
# This makes sure that ALL security updates are applied
# unattended-upgrade -d >/dev/null

# Install packages to allow apt to use a repository over HTTPS
apt-get -y install apt-transport-https ca-certificates gnupg2 software-properties-common host >/dev/null

# Install Oh my ZSH
echo -e "${green_bg} - ${NC}${green} Installing required packages (zsh, git, gcc, etc.)...${NC}"
apt-get -y install curl zsh git p7zip-full tmux pv parallel unzip >/dev/null

# LetsEncrypt Certbot
echo -e "${green_bg} - ${NC}${green} Installing LetsEncrypt...${NC}"
apt-get -y install certbot >/dev/null

######################## If 'docksal' user exists
if id "docksal" >/dev/null 2>&1; then
  echo "Docksal user exists, start using it..."
else 
######################## If 'docksal' user DOES NOT exist
  echo -e "${green_bg} - ${NC}${green} Creating the 'docksal' user...${NC}"

  # This needs to run only once, when the 'docksal' user is created
  rm -rf /etc/sudoers
  apt-get -y install sudo

  # Add docksal as a sudo group with no password
  echo "root	ALL=(ALL:ALL) ALL" >> /etc/sudoers
  echo "docksal ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
  # Create the docksal user
  adduser --disabled-password --gecos "" --shell /bin/bash docksal
  # Assign the docksal group to the user
  usermod -aG docksal docksal
  # Make sure the SSH key is in place
  mkdir /home/docksal/.ssh
  cp -rf /root/.ssh/authorized_keys /home/docksal/.ssh
  chown -R docksal:docksal /home/docksal/.ssh

  # Set SSH to run with NO password, just SSH keys
  echo -e "${green_bg} - ${NC}${green} Securing the server to accept no passwords, just SSH keys and non-root logins${NC}"

##### SSH Client settings (ssh_config)
  sed -i '/.*PasswordAuthentication.*/d' /etc/ssh/ssh_config
  echo 'PasswordAuthentication no' >> /etc/ssh/ssh_config
#-------------------------------------------------------

##### SSH Server settings (sshd_config)
  sed -i '/.*PermitRootLogin.*/d' /etc/ssh/sshd_config
  echo 'PermitRootLogin no' >> /etc/ssh/sshd_config

  sed -i '/.*PasswordAuthentication.*/d' /etc/ssh/sshd_config
  echo 'PasswordAuthentication no' >> /etc/ssh/sshd_config

  sed -i '/.*TCPKeepAlive.*/d' /etc/ssh/sshd_config
  echo 'TCPKeepAlive yes' >> /etc/ssh/sshd_config

  sed -i '/.*ClientAliveInterval.*/d' /etc/ssh/sshd_config
  echo 'ClientAliveInterval 300' >> /etc/ssh/sshd_config
#-------------------------------------------------------

  echo -e "${green_bg} - ${NC}${green} Setting up the 'docksal' user...${NC}"

#  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - >/dev/null
#
#  add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" >/dev/null
#
#  apt-get update -qq >/dev/null
#
#  apt-get install -y -qq --allow-downgrades --no-install-recommends docker-ce-cli=5:18.09.2~3-0~ubuntu-bionic >/dev/null
#
#  apt-get install -y -qq --allow-downgrades --no-install-recommends docker-ce=5:18.09.2~3-0~ubuntu-bionic >/dev/null

  # Install Docksal
  echo -e "${green_bg} - ${NC}${green} Installing Docksal...${NC}"
  runuser -l docksal -c 'curl -fsSL get.docksal.io | zsh' >/dev/null
  usermod -aG docker docksal

  runuser -l docksal -c 'echo \"export PATH="$PATH:/home/docksal/OpenCloud/fin-bin" >> /home/docksal/.profile\"'

  # Set the proxy ip in the global docksal environment file.
  runuser -l docksal -c "echo 'DOCKSAL_VHOST_PROXY_IP=\"0.0.0.0\"' >> /home/docksal/.docksal/docksal.env"

  echo -e "${green} Making sure Docksal responds...${NC}"
  runuser -l docksal -c 'fin system reset'

  echo -e "${green} Rebooting the server to apply settings...${NC}"
  reboot

fi
